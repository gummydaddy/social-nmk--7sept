# Generated by Django 4.2.16 on 2025-03-31 11:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import service_auth.user_profile.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=service_auth.user_profile.storage.CompressedMediaStorage(), upload_to='media/')),
                ('description', models.TextField(blank=True, null=True)),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video')], max_length=10, null=True)),
                ('category', models.CharField(blank=True, help_text='Category of the media.', max_length=50, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('report_count', models.IntegerField(default=0)),
                ('is_private', models.BooleanField(default=False)),
                ('is_story', models.BooleanField(default=False)),
                ('hashtags', models.ManyToManyField(blank=True, related_name='media', to='user_profile.hashtag')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_uploads', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ManyToManyField(blank=True, related_name='reported_media', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='tagged_media', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserHashtagPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked_hashtags', models.JSONField(default=list)),
                ('not_interested_hashtags', models.JSONField(default=list)),
                ('viewed_hashtags', models.JSONField(default=list)),
                ('viewed_media', models.JSONField(default=list)),
                ('not_interested_media', models.JSONField(default=list)),
                ('liked_categories', models.JSONField(default=list)),
                ('search_hashtags', models.JSONField(default=list)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hashtag_preference', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('media', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user_profile.media')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to=settings.AUTH_USER_MODEL)),
                ('viewers', models.ManyToManyField(blank=True, related_name='viewed_stories', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to='cover_photos/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('category', models.CharField(blank=True, help_text='Select the category that best describes your content.', max_length=45, null=True)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('firebase_uid', models.CharField(blank=True, max_length=255, null=True)),
                ('saved_uploads', models.ManyToManyField(blank=True, related_name='saved_by_users', to='user_profile.media')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Engagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engagement_type', models.CharField(choices=[('view', 'View'), ('like', 'Like'), ('comment', 'Comment')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_profile.media')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Buddy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buddy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buddies', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buddy_list', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=service_auth.user_profile.storage.CompressedMediaStorage(), upload_to='media/')),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, help_text='Category of the audio.', max_length=50, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('report_count', models.IntegerField(default=0)),
                ('is_private', models.BooleanField(default=False)),
                ('duration', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3600)])),
                ('size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(104857600)])),
                ('hashtags', models.ManyToManyField(blank=True, related_name='audio', to='user_profile.hashtag')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_audio', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ManyToManyField(blank=True, related_name='reported_audio', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='tagged_audio', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audio', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdminNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed', models.BooleanField(default=False)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_profile.media')),
            ],
        ),
        migrations.AddConstraint(
            model_name='engagement',
            constraint=models.UniqueConstraint(condition=models.Q(('engagement_type', 'view')), fields=('media', 'user', 'engagement_type'), name='unique_view'),
        ),
        migrations.AlterUniqueTogether(
            name='buddy',
            unique_together={('user', 'buddy')},
        ),
    ]
